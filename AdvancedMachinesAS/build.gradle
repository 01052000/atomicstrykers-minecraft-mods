buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.1-SNAPSHOT'
    }
}

apply plugin: 'forge'

def zipfile = new File( 'makezip' )
if( zipfile.exists() ) {
	defaultTasks 'clean', 'makezip'
}
else {
	defaultTasks 'clean', 'build'
}

// each mod uses its project foldername
def projname = projectDir.getName()

// read versions from central workspace xml file
def xmlproperties = new XmlSlurper().parse("../properties.xml")

version = xmlproperties.@version
group= "atomicstryker."+projname
archivesBaseName = projname

minecraft {
    version = xmlproperties.@mcversion
}

// check for specified dependencies on other projects or jars
def dfile = new File( 'dependencies.xml' )
if( dfile.exists() ) {
	def xmldepends = new XmlSlurper().parse("dependencies.xml")
	
	dependencies {
		xmldepends.project.each {
			println 'Adding dependency on project ' + it.text()
			compile files('../'+it.text()+'/build/libs/'+it.text()+'-'+version+'.jar')
		}
		
		// also punch in anything in the forgegradle libs folder
		compile fileTree(dir: '../forgegradle/libs', include: '*.jar')
	}
}

processResources
{
    // copy assets into artifact
    from(sourceSets.main.resources.srcDirs)
	from('src/main/java') {into('src')}
}

// check for provided manifest, use it if so
def manifestfile = new File( 'MANIFEST.MF' )
if( manifestfile.exists() ) {
    jar.manifest.from("MANIFEST.MF")
}

task makezip(type: Zip, dependsOn: 'build') {
	from('build/libs') {into('mods')}
	from('resources')
	from('../UpdateCheckerMod/build/libs') {into('mods')}
}
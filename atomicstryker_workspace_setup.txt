Folder structure this file resides in

./
	./../forgegradle	-> contains gradlew.bat along with the new forge setup
	./**/        		-> contains the Eclipse Workspace with projects in it. Each project has an ant build file

To setup my workspace in your eclipse, simply setup Forge, then move your eclipse workspace into this folder.


Each project/mod contains a "build.xml" in its folder, which, when run as Java Ant Project, cleans the forgegradle workspace, moves the sources into forgegradle,
reobfuscates, packs the resulting files into a jar/zip, and in some cases does additional packaging (when mods need more than drag and drop installation).
Obviously you need to have Java Ant installed and working correctly for that to work. Gradle is not required.

THIS ASSUMES YOUR MOD COMPILES AGAINST FORGEGRADLE - if there are compile errors in the eclipse project, it will fail.

In the UpdateMod project folder there is a buildAll.xml, which, when ran, will build ALL projects/mods.
NOTE: Some projects attempt to include the Update Checker into their packages, which means it will be built first.


Stuff that needs changing each version:

- in "./properties" you find the minecraft version that is appended by the scripts to all resulting mod- and archivenames.
- change is according to minecraft version only, so that you can keep overwriting your Dropbox/whatever link for the current MC version

- each mod has a changelog, add new version
- each mod has a mcmod.info, change to new versions (mod and mc both)
- each mod has a @Mod sourcefile, generally in the common side, in which you need to change the "version =" property


Mods with special Needs:

-- Multi Mine
- Multi Mine needs it's dummy jar (containing only the Manifest.MF) in /mcp/jars/mods/ if you want it to work through MCP
- Multi Mine uses hardcoded obfuscated names in it's sourcefile "common\atomicstryker\multimine\common\fmlmagic\MMTransformer.java"
- those need to be fixed each time minecraft obfuscation changes.
- a good place to get working obfuscated names from is /mcp/conf/: joined.srg, methods.csv and fields.csv
- another good place is MCPBot in the MCP IRC channels, assuming it runs the version you need

-- Dynamic Lights
- similar to Multi Mine. sourcefile is "common\atomicstryker\dynamiclights\common\DLTransformer.java"

-- Stalker Creepers
- similar to Multi Mine. sourcefile is "common\atomicstryker\stalkercreepers\common\SCTransformer.java"

-- Kenshiro Mod
- uses some hacky stuff for rendering and manipulating punched entities. Will probably crash if broken.

-- Advanced Machines and Ropes+
- rely on external packages, namely IC2 and NEI. Put the dev packages into ./../forgegradle/lib/ and fix the imports in the eclipse projects.
- make sure the build.gradle uses the 'lib' folder at compile time, like this:

apply plugin: 'forge'

dependencies {
	compile fileTree(dir: 'libs', include: '*.jar')
}